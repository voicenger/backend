name: Test and Publish Coverage

on:
  pull_request:
    paths:
      - '**/**.py'

concurrency:
  group: ${{ github.head_ref || github.run_id }}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
        - 3.9
        - '3.10'
        - '3.11'

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-django pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set environment variables
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> $GITHUB_ENV
        echo "GOOGLE_OAUTH2_CLIENT_ID=${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_OAUTH2_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "APP_DOMAIN=${{ secrets.APP_DOMAIN }}" >> $GITHUB_ENV
        echo "APP_CLIENT_ID=${{ secrets.APP_CLIENT_ID }}" >> $GITHUB_ENV
        echo "APP_CLIENT_SECRET=${{ secrets.APP_CLIENT_SECRET }}" >> $GITHUB_ENV

    - name: Run tests and generate coverage report
      run: |
        pytest --cov=.
      env:
        DJANGO_SETTINGS_MODULE: voicenger.settings.development

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: .coverage*

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: python -m pip install --upgrade coverage

    - name: Download data
      uses: actions/download-artifact@v4
      with:
        path: ${{ github.workspace }}
        pattern: coverage-data-*
        merge-multiple: true

    - name: Coverage
      run: |
        python -m coverage html --skip-covered --skip-empty
        python -m coverage report
        echo "## Coverage summary" >> $GITHUB_STEP_SUMMARY
        python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

    - name: Upload HTML report
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: html-report
        path: htmlcov
